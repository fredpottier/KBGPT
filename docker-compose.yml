services:
  qdrant:
    image: qdrant/qdrant:v1.15.1
    container_name: knowbase-qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage # volume Docker natif
    #healthcheck:
    #  test: ["CMD-SHELL", "nc -z localhost 6333"]
    #  interval: 10s
    #  timeout: 5s
    #  retries: 5
    environment:
      - QDRANT__STORAGE__CHECK_FS=false
      - QDRANT__STORAGE__STRICT=false
    networks:
      - knowbase_net

  redis:
    image: redis:7.2
    container_name: knowbase-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - knowbase_net

  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: knowbase-app
    depends_on:
      - qdrant
      - redis
    env_file:
      - .env
    environment:
      PYTHONPATH: /app:/app/src
      HF_HOME: /data/models
      KNOWBASE_DATA_DIR: /data
      REDIS_URL: redis://redis:6379/0
    ports:
      - "${APP_PORT}:8000"
      - "5678:5678"
    volumes:
      - ./app:/app
      - ./data:/data
      - ./src:/app/src
    networks:
      - knowbase_net
    working_dir: /app
    command: python -Xfrozen_modules=off -m uvicorn main:app --host 0.0.0.0 --port 8000

  ingestion-worker:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: knowbase-worker
    depends_on:
      - redis
      - qdrant
    env_file:
      - .env
    environment:
      PYTHONPATH: /app:/app/src
      HF_HOME: /data/models
      KNOWBASE_DATA_DIR: /data
      REDIS_URL: redis://redis:6379/0
    volumes:
      - ./app:/app
      - ./data:/data
      - ./src:/app/src
    networks:
      - knowbase_net
    working_dir: /app
    command: python -m knowbase.ingestion.queue.worker

  ui:
    build:
      context: ./ui
      dockerfile: Dockerfile
    container_name: knowbase-ui
    depends_on:
      - app
    env_file:
      - .env
    environment:
      BACKEND_URL: ${BACKEND_URL}
      PYTHONPATH: /app/src:$PYTHONPATH
      KNOWBASE_DATA_DIR: /data
    ports:
      - "${APP_UI_PORT}:8501"
    volumes:
      - ./ui:/app
      - ./src:/app/src
      - ./data:/data
    networks:
      - knowbase_net

  ngrok:
    image: ngrok/ngrok:latest
    container_name: knowbase-ngrok
    restart: unless-stopped
    depends_on:
      - app
    volumes:
      - ./ngrok.yml:/etc/ngrok.yml
      - ./data/logs:/logs
      - ./src:/app/src
    env_file:
      - .env
    command: start --config /etc/ngrok.yml --all
    networks:
      - knowbase_net

networks:
  knowbase_net:
    driver: bridge

volumes:
  qdrant_data: # volume Docker local (resout l'erreur Qdrant)

