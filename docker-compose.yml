services:
  qdrant:
    image: qdrant/qdrant:v1.15.1
    container_name: sap_kb-qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage # ✅ volume Docker natif
    #healthcheck:
    #  test: ["CMD-SHELL", "nc -z localhost 6333"]
    #  interval: 10s
    #  timeout: 5s
    #  retries: 5
    environment:
      - QDRANT__STORAGE__CHECK_FS=false
      - QDRANT__STORAGE__STRICT=false
    networks:
      - sapkb_net

  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: sap_kb-app
    depends_on:
      - qdrant
    env_file:
      - .env
    environment:
      PYTHONPATH: /app
      HF_HOME: /models
    ports:
      - "${APP_PORT}:8000"
      - "5678:5678"
    volumes:
      - ./app:/app
      - ./scripts:/scripts
      - ./public_files:/public_files
      - ./docs_in:/docs_in
      - ./docs_out:/docs_out
      - ./logs:/logs
    networks:
      - sapkb_net
    working_dir: /app
    command: python -Xfrozen_modules=off -m uvicorn main:app --host 0.0.0.0 --port 8000

  ui:
    build:
      context: ./ui
      dockerfile: Dockerfile
    container_name: sap_kb-ui
    depends_on:
      - app
    env_file:
      - .env
    environment:
      BACKEND_URL: ${BACKEND_URL}
    ports:
      - "${APP_UI_PORT}:8501"
    volumes:
      - ./ui:/app
    networks:
      - sapkb_net

  ngrok:
    image: ngrok/ngrok:latest
    container_name: sap_kb-ngrok
    restart: unless-stopped
    depends_on:
      - app
    volumes:
      - ./ngrok.yml:/etc/ngrok.yml
    env_file:
      - .env
    command: start --config /etc/ngrok.yml --all
    networks:
      - sapkb_net

networks:
  sapkb_net:
    driver: bridge

volumes:
  qdrant_data: # ✅ volume Docker local (résout l’erreur Qdrant)
